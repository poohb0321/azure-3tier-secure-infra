provider "azurerm" {
  features {}
}

terraform {
  required_version = ">= 1.3.0"

  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = ">= 3.83.0, < 4.0.0"
    }
  }

  backend "azurerm" {
    resource_group_name   = "rg-secure-infra"
    storage_account_name  = "secureterraformstate123"
    container_name        = "tfstate"
    key                   = "prod.tfstate"
  }
}

module "coreinfra" {
  source                  = "../../modules/coreinfra"
  resource_group_name     = "rg-prod-infra"
  location                = "East US"
  name_prefix             = "prod"
  private_dns_zone_names  = [
    "privatelink.vaultcore.azure.net",
    "privatelink.blob.core.windows.net",
    "privatelink.database.windows.net"
  ]
}

module "networking" {
  source          = "../../modules/networking"
  vnet_name       = "secure-vnet"
  location        = azurerm_resource_group.infra.location
  resource_group  = azurerm_resource_group.infra.name

  address_space   = ["10.1.0.0/16"]

  subnet_names    = ["web-tier", "app-tier", "db-tier", "AzureFirewallSubnet"]
  subnet_prefixes = ["10.1.1.0/24", "10.1.2.0/24", "10.1.3.0/24", "10.1.4.0/24"]

  name_prefix     = "prod"
  private_dns_zone_names = [
    "privatelink.vaultcore.azure.net",
    "privatelink.ods.opinsights.azure.com",
    "privatelink.agentsvc.azure-automation.net"
  ]
}


module "keyvault" {
  source              = "../../modules/keyvault"
  name_prefix         = "prod"
  location            = azurerm_resource_group.infra.location
  resource_group      = azurerm_resource_group.infra.name
  tenant_id           = var.azure_tenant_id
  admin_object_id     = data.azurerm_client_config.current.object_id
}

module "waf" {
  source         = "../../modules/waf"
  appgw_name     = "appgw-prod"
  location       = module.coreinfra.location
  resource_group = module.coreinfra.resource_group_name
  subnet_id      = module.networking.appgw_subnet_id
  public_ip_id   = module.coreinfra.public_ip_id
}

module "aks" {
  source         = "../../modules/aks"
  name_prefix    = "prod"
  location       = module.coreinfra.location
  resource_group = module.coreinfra.resource_group_name
}

module "iam" {
  source = "../../modules/iam"

  assignments = {
    aks_reader = {
      principal_id = module.aks.client_id
      role         = "Reader"
      scope        = module.aks.aks_id
    }

    aks_kv = {
      principal_id = module.aks.client_id
      role         = "Key Vault Secrets User"
      scope        = module.keyvault.key_vault_id
    }
  }
}

module "firewall" {
  source                = "../../modules/firewall"
  name_prefix           = "prod"
  location              = module.coreinfra.location
  resource_group        = module.coreinfra.resource_group_name
  firewall_subnet_id    = module.networking.firewall_subnet_id
  subnet_ids_to_protect = [module.networking.subnet_ids[1]] # app-tier
}

module "sentinel" {
  source         = "../../modules/sentinel"
  location       = module.coreinfra.location
  resource_group = module.coreinfra.resource_group
  workspace_name = "law-prod"
  azure_tenant_id = var.azure_tenant_id

  depends_on = [
    module.coreinfra,
    azurerm_sentinel_log_analytics_workspace_onboarding.sentinel
  ]
}

module "defender" {
  source           = "../../modules/defender"
  enabled_services = [
    "AppServices",
    "KeyVaults",
    "KubernetesService",
    "StorageAccounts"
  ]
}

module "logicapp" {
  source         = "../../modules/logicapp"
  name_prefix    = "prod"
  location       = module.coreinfra.location
  resource_group = module.coreinfra.resource_group_name
}
