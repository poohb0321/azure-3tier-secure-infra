# azure-pipelines.yml  ─ root of repo
# =================================================
trigger:
- main                    # run on each push to main

variables:
- group: backend-secrets  # loads ARM_CLIENT_ID / SECRET / TENANT / SUB

stages:
# ───────────────────────────── Dev stage ─────────────────────────────
- stage: Dev
  displayName: "Deploy to Dev"
  jobs:
  - job: Terraform
    displayName: "Terraform – Dev"
    pool:
      name: mypool

    steps:
    # 1) Checkout repo
    - checkout: self

    # 2) Quick Azure-CLI sanity check (via service connection)
    - task: AzureCLI@2
      displayName: "Azure CLI login via SPN"
      inputs:
        azureSubscription: AzureSPN
        scriptType: ps         # or use 'ps'
        scriptLocation: inlineScript
        inlineScript: |
          az account show

    # 3) Run tfsec and fail only on HIGH/CRITICAL issues
    - powershell: |
        Write-Host "Downloading tfsec..."
        Invoke-WebRequest -Uri "https://github.com/aquasecurity/tfsec/releases/latest/download/tfsec-windows-amd64.exe" -OutFile "$(Build.SourcesDirectory)\tfsec.exe"
        
        Write-Host "Running tfsec scan..."
        & "$(Build.SourcesDirectory)\tfsec.exe" ./environments/dev --out=results.json --format=json --no-color

        Write-Host "Parsing tfsec results..."
        $results = Get-Content "$(Build.SourcesDirectory)\results.json" | ConvertFrom-Json
        $failures = $results | Where-Object { $_.severity -eq "HIGH" -or $_.severity -eq "CRITICAL" }

        if ($failures.Count -gt 0) {
          Write-Error "tfsec found $($failures.Count) HIGH or CRITICAL issues. Failing build."
          exit 1
        } else {
          Write-Host "✅ tfsec completed with only LOW/MEDIUM issues. Build will continue."
          exit 0  # ✅ Explicitly mark as successful
        }
      displayName: "Run tfsec scan (fail on HIGH/CRITICAL)"
      continueOnError: false

    # 4) Publish tfsec results
    - task: PublishBuildArtifacts@1
      displayName: "Publish tfsec JSON report"
      inputs:
        PathtoPublish: 'results.json'
        ArtifactName: 'tfsec-results'
        publishLocation: 'Container'


    # 4a) terraform init with upgrade (for provider fixes)
    - script: terraform init -upgrade
      workingDirectory: '$(System.DefaultWorkingDirectory)/environments/dev'
      displayName: "Terraform init with upgrade (provider refresh)"

    # 4b) terraform init (remote backend setup)
    - task: TerraformTask@5
      displayName: "Terraform init"
      inputs:
        provider: azurerm
        command: init
        workingDirectory: '$(System.DefaultWorkingDirectory)/environments/dev'
        backendServiceArm: AzureSPN
        backendAzureRmSubscriptionId: '0a7eb3ba-cd21-4466-91fd-04134b38423f'
        backendAzureRmResourceGroupName: 'rg-secure-infra'
        backendAzureRmStorageAccountName: 'secureterraformstate123'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'dev.tfstate'
        commandOptions: '-reconfigure'

    # 5) terraform validate
    - task: TerraformTask@5
      displayName: "Terraform validate"
      inputs:
        provider: azurerm
        command: validate
        workingDirectory: '$(System.DefaultWorkingDirectory)/environments/dev'

    # 6) terraform plan
    - task: TerraformTask@5
      displayName: "Terraform plan"
      inputs:
        provider: azurerm
        command: plan
        workingDirectory: '$(System.DefaultWorkingDirectory)/environments/dev'
        environmentServiceNameAzureRM: AzureSPN
        environmentAzureRmSubscriptionId: '0a7eb3ba-cd21-4466-91fd-04134b38423f'
        commandOptions: '-out=tfplan -detailed-exitcode'
      env:
        TF_LOG: INFO

    # 7) terraform apply  (auto-approve; remove flag for manual gate)
    - task: TerraformTask@5
      displayName: "Terraform apply"
      inputs:
        provider: azurerm
        command: apply
        workingDirectory: '$(System.DefaultWorkingDirectory)/environments/dev'
        environmentServiceNameAzureRM: AzureSPN
        environmentAzureRmSubscriptionId: '0a7eb3ba-cd21-4466-91fd-04134b38423f'
        commandOptions: '-auto-approve tfplan'
      env:
        TF_LOG: ERROR



